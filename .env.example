# StockPulse Environment Configuration Example
# Copy this file to .env and update with your actual values

# ====================
# Database Configuration
# ====================
DATABASE_URL=postgresql://postgres:postgres@db:5432/stockpulse
POSTGRES_DB=stockpulse
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# ====================
# API Keys (Required)
# ====================
# Get your Polygon API key from: https://polygon.io/
POLYGON_API_KEY=your_polygon_api_key_here

# Get your SerpAPI key from: https://serpapi.com/
SERPAPI_KEY=your_serpapi_key_here

# Get your OpenAI API key from: https://platform.openai.com/
OPENAI_API_KEY=your_openai_api_key_here

# Get your Finnhub API key from: https://finnhub.io/
FINNHUB_API_KEY=your_finnhub_api_key_here

# Get your Alpha Vantage API key from: https://www.alphavantage.co/
ALPHA_VANTAGE_API_KEY=your_alpha_vantage_api_key_here

# ====================
# Email Configuration (Optional - for notifications)
# ====================
# Gmail example (requires app-specific password)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_app_specific_password
NOTIFICATION_EMAIL=alerts@yourdomain.com
ADMIN_EMAIL=admin@yourdomain.com

# ====================
# Notification Webhooks (Optional)
# ====================
# Slack webhook for alerts
SLACK_WEBHOOK=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
SLACK_CHANNEL=#stock-alerts
SLACK_USERNAME=StockPulse Bot

# Discord webhook for alerts
DISCORD_WEBHOOK=https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK
DISCORD_USERNAME=StockPulse Bot

# Telegram bot configuration
TELEGRAM_BOT_TOKEN=your_telegram_bot_token
TELEGRAM_CHAT_ID=your_telegram_chat_id

# ====================
# Screening Configuration
# ====================
# Minimum screening score (0-100)
MIN_SCREENING_SCORE=70

# Maximum stocks to analyze per run
MAX_STOCKS_TO_ANALYZE=100

# ====================
# Logging Configuration
# ====================
LOG_LEVEL=INFO
LOG_FILE=stockpulse.log
MAX_LOG_SIZE=50  # MB
LOG_RETENTION_DAYS=30

# ====================
# Frontend Configuration
# ====================
# React app configuration
REACT_APP_API_URL=http://localhost:8000
NODE_ENV=development
PORT=3010

# ====================
# Backend Configuration
# ====================
# Python environment
PYTHONUNBUFFERED=1

# ====================
# Docker Configuration
# ====================
# For development with hot reload
WATCHPACK_POLLING=true
CHOKIDAR_USEPOLLING=true

# TypeScript configuration
TSC_COMPILE_ON_ERROR=true
DISABLE_ESLINT_PLUGIN=true